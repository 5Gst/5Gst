name: "SERVICE___API_service_generation_using_swagger"

on: [push, pull_request]

jobs:
  service-generate-swagger:
    runs-on: ubuntu-latest
    env:
      SERVICE_IP_ADDRESS: localhost
      BALANCER_ADDRESS: localhost:5555
      IPERF_PORT: 5001
      SERVICE_PORT: 5000
      SECRET_KEY: test
    defaults:
      run:
        working-directory: ./service

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # TODO fix service so it can generate swagger schema without iperf built
      - name: Iperf compilation
        run: ./scripts/build-iperf.sh

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install pip, pipenv and packages from Pipfile
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install
      - name: Generate swagger schema
        run: |
          pipenv run python manage.py generate_swagger swagger-service.yaml
      - name: Upload swagger schema to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: swagger-schema-service
          path: service/swagger-service.yaml

  service-generate-code:
    runs-on: ubuntu-latest
    needs: service-generate-swagger
    container: swaggerapi/swagger-codegen-cli:2.4.27
    defaults:
      run:
        working-directory: ./service

    steps:
      - uses: actions/checkout@v3

      - name: Download swagger schema
        uses: actions/download-artifact@v2
        with:
          name: swagger-schema-service
          path: service

      - name: Clear AUTOBUILD directory
        run: rm -rf ../AUTOBUILD-service

      - name: Generate client for service
        run: >
          java
          -jar
          /opt/swagger-codegen-cli/swagger-codegen-cli.jar
          generate
          -i swagger-service.yaml
          -l python
          -o ../AUTOBUILD-service/balancer2ServiceClient/
          -c ../balancer/.swagger-codegen-config/serviceApi.json
      - name: Generate client for application
        run: >
          java
          -jar
          /opt/swagger-codegen-cli/swagger-codegen-cli.jar
          generate
          -i swagger-service.yaml
          -l java
          -o ../AUTOBUILD-service/application2ServiceClient/
          -c ../application/.swagger-codegen-config/serviceApi.json
      # Swagger codegen container has invalid git installed,
      # so we need another container to push changes
      - name: Upload generated code to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: AUTOBUILD-service
          path: AUTOBUILD-service

  service-push:
    runs-on: ubuntu-latest
    needs: service-generate-code
    defaults:
      run:
        working-directory: ./service

    steps:
      - uses: actions/checkout@v3

      - name: Clear previously generated code
        run: |
          rm -rf ../AUTOBUILD-service
          rm -rf ../application/serviceApi
          rm -rf ../balancer/service_api
      - name: Download generated code
        uses: actions/download-artifact@v2
        with:
          name: AUTOBUILD-service
          path: AUTOBUILD-service

      - name: Move generated code to projects
        run: |
          cp -r ../AUTOBUILD-service/application2ServiceClient/ ../application/serviceApi
          cp -r ../AUTOBUILD-service/balancer2ServiceClient/service_api/ ../balancer/service_api
          cd ../application
          git apply ./.swagger-codegen-config/serviceApi.patch
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
            commit_message: 'Generate service client using swagger-codegen'
            file_pattern: application/serviceApi balancer/service_api


  #needs нужен для порядка и проверки что предыдущий степ выполнен (тип выполнение нового степа будет ток после того как степ из нидс хорошо отработает,
  #если не отработает - новый степ не запустится ), а always нужен чтоб если даже из нидс степ не выполнен,
  #то новый степ в любом случае выполнился (тип гарантирует, что новый степ всегда будет выполнен вне зависимости от других обстоятельств)
  service-test:
    runs-on: ubuntu-latest
    needs: service-push
    env:
      SERVICE_IP_ADDRESS: localhost
      BALANCER_ADDRESS: localhost:5555
      IPERF_PORT: 5001
      SERVICE_PORT: 5000
      SECRET_KEY: test
    defaults:
      run:
        working-directory: ./service
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Compilation
        run: ./scripts/build-iperf.sh

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Install pip, pipenv and packages from Pipfile
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Run tests
        run: |
          pipenv run test
            
