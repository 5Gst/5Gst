/*
 * Balancer API
 * Speedtest load balancer
 *
 * OpenAPI spec version: 0.1.0
 * Contact: dev@5gst.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.scoltech.openran.speedtest.client.balancer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * IperfProbeResults
 */

public class IperfProbeResults {
  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("speed_bits_per_second")
  private Integer speedBitsPerSecond = null;

  public IperfProbeResults timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public IperfProbeResults speedBitsPerSecond(Integer speedBitsPerSecond) {
    this.speedBitsPerSecond = speedBitsPerSecond;
    return this;
  }

   /**
   * Get speedBitsPerSecond
   * minimum: -2147483648
   * maximum: 2147483647
   * @return speedBitsPerSecond
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getSpeedBitsPerSecond() {
    return speedBitsPerSecond;
  }

  public void setSpeedBitsPerSecond(Integer speedBitsPerSecond) {
    this.speedBitsPerSecond = speedBitsPerSecond;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IperfProbeResults iperfProbeResults = (IperfProbeResults) o;
    return Objects.equals(this.timestamp, iperfProbeResults.timestamp) &&
        Objects.equals(this.speedBitsPerSecond, iperfProbeResults.speedBitsPerSecond);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, speedBitsPerSecond);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IperfProbeResults {\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    speedBitsPerSecond: ").append(toIndentedString(speedBitsPerSecond)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

