/*
 * Service API
 * Speedtest iperf service
 *
 * OpenAPI spec version: 0.1.0
 * Contact: dev@5gst.ru
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.scoltech.openran.speedtest.client.service.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import ru.scoltech.openran.speedtest.client.service.model.IperfSpeedProbe;

/**
 * IperfMeasurement
 */

public class IperfMeasurement {
  @SerializedName("probes")
  private List<IperfSpeedProbe> probes = new ArrayList<>();

  public IperfMeasurement probes(List<IperfSpeedProbe> probes) {
    this.probes = probes;
    return this;
  }

  public IperfMeasurement addProbesItem(IperfSpeedProbe probesItem) {
    this.probes.add(probesItem);
    return this;
  }

   /**
   * Get probes
   * @return probes
  **/
  @ApiModelProperty(required = true, value = "")
  public List<IperfSpeedProbe> getProbes() {
    return probes;
  }

  public void setProbes(List<IperfSpeedProbe> probes) {
    this.probes = probes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IperfMeasurement iperfMeasurement = (IperfMeasurement) o;
    return Objects.equals(this.probes, iperfMeasurement.probes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(probes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IperfMeasurement {\n");
    
    sb.append("    probes: ").append(toIndentedString(probes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

